@startuml
'https://plantuml.com/sequence-diagram

skinparam backgroundColor #EEEBDC
skinparam sequence {
    ParticipantBorderColor DodgerBlue
    ParticipantBackgroundColor DeepSkyBlue
    ActorBorderColor DarkGreen
    ActorBackgroundColor Green
    BoxBorderColor LightBlue
    BoxBackgroundColor #F0FFFF
}
skinparam collections {
    BackGroundColor LightBlue
    BorderColor DodgerBlue
}

title MCS Configure Scan Band 1/2 - VCC Detail\n

box "\nMCS\n"
    participant "Mid.CBF\nSubarray" as subarray
    collections "VCC\n" as vcc
end box
box "\nHPS\n"
    participant "VCC\nController" as hpsvcc
    participant "VCC\nBand1&2" as vccband1
    participant "Circuit\nSwitch" as cs
    participant "VCC\n" as vccdevice
    participant "Wide Band\nInput Buffer" as wb
end box

group #LightCyan For each assigned receptor:
    subarray    -> subarray     : Calculate\ndish_sample_rate
    note right                  : dish_sample_rate (Band 1/2) = 3960 MHz + (1 * K * <U+0394>F)
    subarray    -> vcc          : ConfigureBand(json_str)
    vcc         -> vcc          : Load band configuration
    vcc         -> hpsvcc       : ConfigureBand(int)
    group #SeaShell If FrequencyBand == [1,2]:
        hpsvcc  -> vccband1     : On
    else 
        hpsvcc  -> vccband1     : Disable
    end group
    vcc         -> vccband1     : SetInternalParameters(json_str)
    vccband1    -> vccband1     : Set VCC gains,\nSet sample_rate

    subarray    -> vcc          : ConfigureScan(json_str)
    vcc         -> vccband1     : ConfigureScan(json_str)
    vccband1    -> cs           : Set cs_input_select
    vccband1    -> vccdevice    : Set frame_count
    vccband1    -> wb           : Set stream_rate, packet_rate, etc.
    note over wb                : receiveEnable: True
    vccband1    -> vccband1     : verify_configuration()
    note over vcc               : ObsState: READY
end group


@enduml